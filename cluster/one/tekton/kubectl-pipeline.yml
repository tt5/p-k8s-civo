apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: kubectl
spec:
  tasks:
    - name: cleaning
      taskRef:
        name: kubernetes-actions
      params:
        - name: script
          value: |
            kubectl delete pod -l tekton.dev/pipeline=kubectl --field-selector=status.phase==Succeeded
            kubectl delete pipelinerun -l tekton.dev/pipeline=kubectl --field-selector=metadata.name\!=$(context.pipelineRun.name)
            kubectl delete pipelinerun -l tekton.dev/pipeline=test
    - name: kubectl
      taskRef:
        name: kubernetes-actions
      runAfter:
        - cleaning
      params:
        - name: script
          value: |
            cat <<EOF | kubectl apply -f -
            apiVersion: tekton.dev/v1
            kind: PipelineRun
            metadata:
              name: test
            spec:
              pipelineRef:
                name: test
              workspaces:
                - name: workspace
                  persistentVolumeClaim:
                    claimName: workspace
            EOF
    - name: logs
      taskRef:
        name: kubernetes-actions
      runAfter:
        - kubectl
      params:
        - name: script
          value: |
            until
              kubectl get pod test-task2-pod
              echo $?
            do true; done
            sleep 1
            kubectl wait --for condition=Ready pod/test-task2-pod
            kubectl get pod test-task2-pod
            kubectl wait --for condition=Ready --timeout=60s pod/test-task2-pod
            kubectl wait --for condition=Ready=False --timeout=60s pod/test-task2-pod
            kubectl logs test-task2-pod
